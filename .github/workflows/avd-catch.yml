name: avd-cache

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in minutes (1â€“360)'
        required: false
        default: '5'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable KVM (hardware accel)
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17 (Temurin)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL /usr/local/share/boost
          sudo docker image prune -a -f || true
          sudo apt-get clean
          df -h

      - name: Install GUI and emulator dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0 \
            libxcb-xinerama0 libxcb-cursor0 libxkbcommon-x11-0 \
            libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 \
            xvfb unzip wget

      - name: Install FRP client v0.58.1
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo install -m 0755 frp_0.58.1_linux_amd64/frpc /usr/local/bin/frpc
          rm -rf frp_0.58.1_linux_amd64*

      - name: Configure FRP (KCP) and start
        shell: bash
        run: |
          cat <<EOF > frpc.toml
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"

          [[proxies]]
          name = "github-avd-adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555

          [[proxies]]
          name = "github-avd-console"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5554
          remotePort = 5554
          EOF

          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          for i in {1..5}; do
            pgrep -x frpc && break
            sleep 1
          done

          if pgrep -x frpc >/dev/null; then
            echo "frpc running"
          else
            echo "frpc failed"
            exit 1
          fi

      - name: Restore persistent AVD cache
        uses: actions/cache/restore@v4
        id: avd-cache
        continue-on-error: true
        with:
          path: |
            ~/.android/avd
            ~/.android/adb*
          key: avd-30-persistent-v1-${{ github.run_id }}
          restore-keys: |
            avd-30-persistent-v1-

      - name: Create and launch emulator with GUI
        run: |
          echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86_64" -d pixel_xl || true
          echo "hw.ramSize=6144" >> ~/.android/avd/test.avd/config.ini
          echo "hw.heapSize=1024" >> ~/.android/avd/test.avd/config.ini
          echo "disk.dataPartition.size=12288M" >> ~/.android/avd/test.avd/config.ini

          nohup xvfb-run --auto-servernum --server-args='-screen 0 1280x720x24' \
          emulator -avd test -gpu host -camera-back emulated -camera-front emulated \
          -noaudio -no-boot-anim -verbose > emulator.log 2>&1 &

          echo "Waiting for emulator to boot..."
          for i in {1..60}; do
            boot_status=$(adb -s emulator-5554 shell getprop sys.boot_completed 2>/dev/null | tr -d '\r')
            if [[ "$boot_status" == "1" ]]; then
              echo "Emulator booted successfully"
              break
            fi
            sleep 5
          done

          adb tcpip 5555
          sleep 2
          adb connect 127.0.0.1:5555 || true
          adb devices

      - name: Upload emulator logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs
          path: emulator.log
          retention-days: 7
