name: avd-rooted-maxperf

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in hours (max 6)'
        required: false
        default: '6'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Available Space
        run: |
          echo "üìä Disk Space Available:"
          df -h / | tail -1
          df -h /mnt | tail -1
          echo ""

      - name: Enable KVM Hardware Acceleration
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules > /dev/null
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          sudo chmod 666 /dev/kvm
          sudo usermod -a -G kvm runner
          echo "‚úÖ KVM enabled"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK on /mnt (NO cleanup - use big disk!)
        run: |
          # Create Android home on /mnt (70GB+ available)
          sudo mkdir -p /mnt/android
          sudo chown $(whoami):$(whoami) /mnt/android
          
          export ANDROID_HOME=/mnt/android
          export ANDROID_USER_HOME=/mnt/android
          
          # Use official setup (will use /mnt via env vars)
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME
          
          # Download SDK
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-*
          rm commandlinetools-linux-*.zip
          
          # Accept licenses
          echo "" | ./cmdline-tools/bin/sdkmanager --sdk_root=/mnt/android --licenses > /dev/null 2>&1 || true
          
          # Install tools
          ./cmdline-tools/bin/sdkmanager --sdk_root=/mnt/android \
            "platform-tools" \
            "build-tools;34.0.0" \
            "platforms;android-34" \
            "system-images;android-30;google_apis;x86_64" \
            > /dev/null 2>&1
          
          echo "‚úÖ Android SDK installed on /mnt (70GB+ available)"
          df -h /mnt | tail -1

      - name: Create Rooted AVD on /mnt
        run: |
          export ANDROID_HOME=/mnt/android
          export ANDROID_USER_HOME=/mnt/android
          export ANDROID_AVD_HOME=/mnt/android/avd
          
          mkdir -p $ANDROID_AVD_HOME
          
          # Create AVD with MAX disk
          echo "no" | /mnt/android/cmdline-tools/bin/avdmanager create avd \
            -n "rooted_avd" \
            -k "system-images;android-30;google_apis;x86_64" \
            -d "pixel_6_pro" \
            -c 60G \
            2>&1 | tail -5 || true
          
          echo "‚úÖ Rooted AVD created on /mnt with 60GB storage"

      - name: Install FRP Client v0.58.1
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          sudo chmod +x /usr/local/bin/frpc
          rm -rf frp_0.58.1_linux_amd64*
          echo "‚úÖ FRP installed"

      - name: Create FRP Client Configuration with KCP
        run: |
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "github-avd-adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          
          [[proxies]]
          name = "github-avd-console"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5554
          remotePort = 5554
          EOF
          echo "‚úÖ FRP config created"

      - name: Start FRP KCP Tunnel
        run: |
          echo "üöÄ Starting FRP with KCP protocol..."
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 5
          if pgrep -x "frpc" > /dev/null; then
            echo "‚úÖ FRP KCP tunnel started"
          fi

      - name: Create Monitoring Script
        run: |
          cat > monitor.sh << 'SCRIPT'
          #!/bin/bash
          DURATION_HOURS=$1
          DURATION_SECONDS=$((3600 * DURATION_HOURS))
          START_TIME=$(date +%s)
          
          echo "‚è±Ô∏è  Session: ${DURATION_HOURS} hours"
          echo "üïê Started: $(date)"
          echo "üî• Protocol: KCP (30-40% lower latency)"
          echo "üîì Root: ‚úÖ Full Access"
          echo "üíæ RAM: 6GB | Storage: 60GB (on /mnt)"
          echo "ü§ñ Android 11 (API 30)"
          echo "üöÄ Maximum Performance Mode"
          echo ""
          
          ITERATION=0
          while true; do
            CURRENT_TIME=$(date +%s)
            ELAPSED=$((CURRENT_TIME - START_TIME))
            
            if [ $ELAPSED -ge $DURATION_SECONDS ]; then
              echo "‚úÖ Session completed"
              break
            fi
            
            REMAINING=$((DURATION_SECONDS - ELAPSED))
            HOURS=$((REMAINING / 3600))
            MINUTES=$(((REMAINING % 3600) / 60))
            
            ITERATION=$((ITERATION + 1))
            if [ $((ITERATION % 60)) -eq 0 ]; then
              DEVICES=$(adb devices | grep -c "5555.*device" || echo "0")
              FRP_STATUS="‚úÖ"
              pgrep -x "frpc" > /dev/null || FRP_STATUS="‚ùå"
              echo "[$(date '+%H:%M:%S')] ‚è≥ ${HOURS}h ${MINUTES}m | üì± ADB: ${DEVICES} | üîó KCP: ${FRP_STATUS}"
            fi
            
            sleep 1
          done
          SCRIPT
          chmod +x monitor.sh

      - name: Start Rooted Emulator - Maximum Performance
        run: |
          export ANDROID_HOME=/mnt/android
          export ANDROID_USER_HOME=/mnt/android
          export ANDROID_AVD_HOME=/mnt/android/avd
          export PATH=/mnt/android/emulator:/mnt/android/platform-tools:$PATH
          
          echo "========================================="
          echo "   üöÄ Rooted Android 11"
          echo "   üí™ MAXIMUM PERFORMANCE"
          echo "========================================="
          echo ""
          
          # Start emulator
          /mnt/android/emulator/emulator -avd rooted_avd \
            -gpu on \
            -memory 6144 \
            -cores 4 \
            -no-window \
            -no-snapshot \
            > /tmp/emulator.log 2>&1 &
          
          sleep 20
          
          # Enable root
          /mnt/android/platform-tools/adb root
          /mnt/android/platform-tools/adb wait-for-device
          /mnt/android/platform-tools/adb remount
          
          # Enable TCP/IP
          /mnt/android/platform-tools/adb tcpip 5555
          sleep 5
          /mnt/android/platform-tools/adb connect 127.0.0.1:5555
          sleep 2
          
          echo ""
          echo "========================================="
          echo "   üì± Device Specifications"
          echo "========================================="
          echo "Android: 11 (API 30)"
          echo "RAM: 6GB"
          echo "Storage: 60GB (on /mnt - NO CLEANUP NEEDED)"
          echo "CPU: 4 cores (x86_64)"
          echo "GPU: SwiftShader (software rendering)"
          echo "Root: ‚úÖ Full Access"
          echo "System: Writable"
          echo ""
          
          # Verify root
          echo "üîê Root Access:"
          /mnt/android/platform-tools/adb shell "whoami"
          
          echo ""
          echo "üíæ Storage Available:"
          /mnt/android/platform-tools/adb -s 127.0.0.1:5555 shell df -h /data | grep -v Filesystem
          
          echo ""
          echo "üß† Memory:"
          /mnt/android/platform-tools/adb -s 127.0.0.1:5555 shell cat /proc/meminfo | grep MemTotal
          
          echo ""
          echo "========================================="
          echo "   üåê CONNECTION INFO"
          echo "========================================="
          echo ""
          echo "üì± Connect from your device:"
          echo "   ‚Ä¢ IP: 159.195.6.61"
          echo "   ‚Ä¢ Port: 5555"
          echo "   ‚Ä¢ Protocol: KCP (Low Latency)"
          echo ""
          echo "üíª ADB Commands:"
          echo "   adb connect 159.195.6.61:5555"
          echo "   adb devices"
          echo "   adb root (already enabled)"
          echo "   adb shell (root shell access)"
          echo "   adb install app.apk"
          echo ""
          echo "üì¶ Install Apps:"
          echo "   ‚Ä¢ Download APKs from browser"
          echo "   ‚Ä¢ Install Aurora Store manually"
          echo "   ‚Ä¢ Use adb install command"
          echo ""
          echo "========================================="
          echo "VPS: 159.195.6.61:5555"
          echo "Protocol: KCP (UDP) - 30-40% Lower Latency"
          echo "Android: 11 | RAM: 6GB | Storage: 60GB (/mnt)"
          echo "Root: ‚úÖ FULL ACCESS"
          echo "Performance: üöÄ MAXIMUM"
          echo "========================================="
          echo ""
          
          ./monitor.sh ${{ github.event.inputs.duration }}

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rooted-avd-logs-${{ github.run_number }}
          path: |
            frpc.log
            frpc.toml
            /tmp/emulator.log
          retention-days: 7
