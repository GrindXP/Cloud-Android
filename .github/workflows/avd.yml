name: Rooted Android 11 - Maximum Performance + KCP

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in hours (max 6)'
        required: false
        default: '6'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Enable KVM Hardware Acceleration
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Free Up Disk Space
        run: |
          echo "üóëÔ∏è Freeing up disk space..."
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /usr/local/share/boost
          sudo docker image prune --all --force
          sudo apt-get clean
          df -h

      - name: Install FRP Client v0.58.1
        run: |
          wget -q https://github.com/fatedier/frp/releases/download/v0.58.1/frp_0.58.1_linux_amd64.tar.gz
          tar -xzf frp_0.58.1_linux_amd64.tar.gz
          sudo cp frp_0.58.1_linux_amd64/frpc /usr/local/bin/
          sudo chmod +x /usr/local/bin/frpc
          rm -rf frp_0.58.1_linux_amd64*

      - name: Create FRP Client Configuration with KCP
        run: |
          cat > frpc.toml << 'EOF'
          serverAddr = "159.195.6.61"
          serverPort = 7000
          transport.protocol = "kcp"
          
          [[proxies]]
          name = "github-avd-adb"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5555
          remotePort = 5555
          
          [[proxies]]
          name = "github-avd-console"
          type = "tcp"
          localIP = "127.0.0.1"
          localPort = 5554
          remotePort = 5554
          EOF

      - name: AVD Cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30-rooted-maxperf-v1

      - name: Create Rooted AVD Snapshot
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 6144M
          heap-size: 1024M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -writable-system
          disable-animations: true
          script: |
            echo "‚úÖ Rooted AVD created with maximum specs"
            adb root
            adb wait-for-device

      - name: Start FRP KCP Tunnel
        run: |
          echo "üöÄ Starting FRP with KCP protocol..."
          nohup frpc -c frpc.toml > frpc.log 2>&1 &
          sleep 5
          if pgrep -x "frpc" > /dev/null; then
            echo "‚úÖ FRP KCP tunnel started"
          fi

      - name: Create Monitoring Script
        run: |
          cat > monitor.sh << 'SCRIPT'
          #!/bin/bash
          DURATION_HOURS=$1
          DURATION_SECONDS=$((3600 * DURATION_HOURS))
          START_TIME=$(date +%s)
          
          echo "‚è±Ô∏è  Session: ${DURATION_HOURS} hours"
          echo "üïê Started: $(date)"
          echo "üî• Protocol: KCP (30-40% lower latency)"
          echo "üîì Root: ‚úÖ Full Access"
          echo "üíæ RAM: 6GB | Storage: 12GB"
          echo "ü§ñ Android 11 (API 30)"
          echo "üöÄ Maximum Performance Mode"
          echo ""
          
          ITERATION=0
          while true; do
            CURRENT_TIME=$(date +%s)
            ELAPSED=$((CURRENT_TIME - START_TIME))
            
            if [ $ELAPSED -ge $DURATION_SECONDS ]; then
              echo "‚úÖ Session completed"
              break
            fi
            
            REMAINING=$((DURATION_SECONDS - ELAPSED))
            HOURS=$((REMAINING / 3600))
            MINUTES=$(((REMAINING % 3600) / 60))
            
            ITERATION=$((ITERATION + 1))
            if [ $((ITERATION % 60)) -eq 0 ]; then
              DEVICES=$(adb devices | grep -c "5555.*device" || echo "0")
              FRP_STATUS="‚úÖ"
              pgrep -x "frpc" > /dev/null || FRP_STATUS="‚ùå"
              echo "[$(date '+%H:%M:%S')] ‚è≥ ${HOURS}h ${MINUTES}m | üì± ADB: ${DEVICES} | üîó KCP: ${FRP_STATUS}"
            fi
            
            sleep 1
          done
          SCRIPT
          chmod +x monitor.sh

      - name: Start Rooted Emulator - Maximum Performance
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 6144M
          heap-size: 1024M
          disk-size: 12288M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -memory 6144 -cores 4 -skin 1080x2400 -writable-system
          disable-animations: true
          script: |
            echo "========================================="
            echo "   üöÄ Rooted Android 11"
            echo "   üí™ MAXIMUM PERFORMANCE"
            echo "========================================="
            echo ""
            
            # Enable root
            adb root
            adb wait-for-device
            adb remount
            
            # Enable TCP/IP
            adb tcpip 5555
            sleep 5
            adb connect 127.0.0.1:5555
            sleep 2
            
            echo ""
            echo "========================================="
            echo "   üì± Device Specifications"
            echo "========================================="
            echo "Android: 11 (API 30)"
            echo "RAM: 6GB"
            echo "Storage: 12GB"
            echo "CPU: 4 cores (x86_64)"
            echo "GPU: SwiftShader (software rendering)"
            echo "Root: ‚úÖ Full Access"
            echo "System: Writable"
            echo ""
            
            # Verify root
            echo "üîê Root Access:"
            adb shell "whoami"
            
            echo ""
            echo "üíæ Storage Available:"
            adb -s 127.0.0.1:5555 shell df -h /data | grep -v Filesystem
            
            echo ""
            echo "üß† Memory:"
            adb -s 127.0.0.1:5555 shell cat /proc/meminfo | grep MemTotal
            
            echo ""
            echo "========================================="
            echo "   üåê CONNECTION INFO"
            echo "========================================="
            echo ""
            echo "üì± Connect from your device:"
            echo "   ‚Ä¢ IP: 159.195.6.61"
            echo "   ‚Ä¢ Port: 5555"
            echo "   ‚Ä¢ Protocol: KCP (Low Latency)"
            echo ""
            echo "üíª ADB Commands:"
            echo "   adb connect 159.195.6.61:5555"
            echo "   adb devices"
            echo "   adb root (already enabled)"
            echo "   adb shell (root shell access)"
            echo "   adb install app.apk"
            echo ""
            echo "üì¶ Install Apps:"
            echo "   ‚Ä¢ Download APKs from browser"
            echo "   ‚Ä¢ Install Aurora Store manually"
            echo "   ‚Ä¢ Use adb install command"
            echo ""
            echo "========================================="
            echo "VPS: 159.195.6.61:5555"
            echo "Protocol: KCP (UDP) - 30-40% Lower Latency"
            echo "Android: 11 | RAM: 6GB | Storage: 12GB"
            echo "Root: ‚úÖ FULL ACCESS"
            echo "Performance: üöÄ MAXIMUM"
            echo "========================================="
            echo ""
            ./monitor.sh ${{ github.event.inputs.duration }}

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: rooted-avd-logs-${{ github.run_number }}
          path: |
            frpc.log
            frpc.toml
          retention-days: 7
