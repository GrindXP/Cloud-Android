      - name: Start Emulator and Keep Session Alive
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ github.event.inputs.api_level }}
          target: google_apis
          arch: x86_64
          profile: pixel_6_pro
          ram-size: 4096M
          heap-size: 512M
          disk-size: 8192M
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -camera-front none -memory 4096 -cores 4 -skin 1080x2400
          disable-animations: true
          script: |
            set -e
            
            echo "========================================="
            echo "   üöÄ Android Emulator Started"
            echo "========================================="
            echo ""
            
            adb devices -l
            echo ""
            
            # Enable TCP/IP
            echo "‚öôÔ∏è  Enabling ADB over TCP/IP..."
            adb tcpip 5555
            sleep 5
            
            adb connect 127.0.0.1:5555
            sleep 2
            
            # Device information
            echo ""
            echo "========================================="
            echo "   üì± Device Information"
            echo "========================================="
            echo "Android Version: $(adb -s 127.0.0.1:5555 shell getprop ro.build.version.release)"
            echo "API Level: $(adb -s 127.0.0.1:5555 shell getprop ro.build.version.sdk)"
            echo "CPU: $(adb -s 127.0.0.1:5555 shell getprop ro.product.cpu.abi)"
            echo "Model: $(adb -s 127.0.0.1:5555 shell getprop ro.product.model)"
            echo ""
            
            # Install scrcpy server (with proper error handling)
            echo "üì¶ Installing scrcpy server..."
            set +e  # Temporarily allow errors
            wget -q https://github.com/Genymobile/scrcpy/releases/download/v3.3.3/scrcpy-server-v3.3.3 -O scrcpy-server.jar
            if [ $? -eq 0 ]; then
              adb -s 127.0.0.1:5555 push scrcpy-server.jar /data/local/tmp/scrcpy-server.jar
              echo "‚úÖ scrcpy server installed (v3.3.3)"
            else
              echo "‚ö†Ô∏è  scrcpy server download failed (optional - ADB still works)"
            fi
            set -e  # Re-enable exit on error
            echo ""
            
            # Connection instructions
            echo "========================================="
            echo "   üåê READY FOR REMOTE CONNECTION"
            echo "========================================="
            echo ""
            echo "Connect from YOUR local machine:"
            echo ""
            echo "  adb connect 159.195.6.61:5555"
            echo "  adb devices"
            echo ""
            echo "Basic ADB commands:"
            echo "  adb shell                    # Open shell"
            echo "  adb install app.apk          # Install APK"
            echo "  adb logcat                   # View logs"
            echo "  adb shell input text 'hello' # Input text"
            echo ""
            echo "Screen mirroring (if scrcpy installed on local machine):"
            echo "  scrcpy --serial 159.195.6.61:5555 --max-size 1920 --bit-rate 8M"
            echo ""
            echo "========================================="
            echo "VPS IP: 159.195.6.61"
            echo "ADB Port: 5555"
            echo "Console Port: 5554"
            echo "========================================="
            echo ""
            
            # Session configuration
            DURATION_HOURS=${{ github.event.inputs.duration }}
            DURATION_SECONDS=$((3600 * DURATION_HOURS))
            START_TIME=$(date +%s)
            
            echo "‚è±Ô∏è  Session duration: ${DURATION_HOURS} hours"
            echo "üïê Started at: $(date)"
            echo ""
            echo "‚úÖ Emulator ready! Monitoring active..."
            echo ""
            
            # Keep-alive loop
            ITERATION=0
            while true; do
              CURRENT_TIME=$(date +%s)
              ELAPSED=$((CURRENT_TIME - START_TIME))
              
              if [ $ELAPSED -ge $DURATION_SECONDS ]; then
                echo ""
                echo "‚úÖ Session completed after ${DURATION_HOURS} hours"
                break
              fi
              
              REMAINING=$((DURATION_SECONDS - ELAPSED))
              HOURS=$((REMAINING / 3600))
              MINUTES=$(((REMAINING % 3600) / 60))
              
              ITERATION=$((ITERATION + 1))
              if [ $((ITERATION % 60)) -eq 0 ]; then
                DEVICES=$(adb devices | grep -c "5555.*device" || echo "0")
                
                FRP_STATUS="‚ùå"
                if pgrep -x "frpc" > /dev/null; then
                  FRP_STATUS="‚úÖ"
                else
                  nohup frpc -c frpc.toml > frpc.log 2>&1 &
                  sleep 3
                  FRP_STATUS="‚ôªÔ∏è"
                fi
                
                echo "[$(date '+%H:%M:%S')] ‚è≥ ${HOURS}h ${MINUTES}m | üì± ${DEVICES} | üîó ${FRP_STATUS}"
              fi
              
              sleep 1
            done
            
            echo "Session ended: $(date)"
