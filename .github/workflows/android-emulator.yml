name: Android Ngrok Cloud
on:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - uses: actions/checkout@v3

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0 libgl1

          # Download ngrok
          wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
          tar xzf ngrok-v3-stable-linux-amd64.tgz
          ./ngrok config add-authtoken 34bu700ATDFmwOazDaKvfnkt6mU_ubybviWdfZ7njs4WHVFC

      - name: Create Keep Alive Script
        run: |
          cat > keep_alive.sh << 'EOF'
          #!/bin/bash

          sleep 10

          TUNNEL=""
          while [[ -z "$TUNNEL" ]]; do
            TUNNEL=$(curl -s http://localhost:4040/api/tunnels | grep -o '"public_url":"tcp://[^"]*' | cut -d'"' -f4 | head -1)
            sleep 1
          done

          HOST=$(echo $TUNNEL | sed 's|tcp://||' | cut -d':' -f1)
          PORT=$(echo $TUNNEL | sed 's|tcp://||' | cut -d':' -f2)
          echo ""
          echo "=========================================="
          echo "âœ… ANDROID EMULATOR READY!"
          echo "ðŸ”— NGROK CONNECTION:"
          echo "   Host: $HOST"
          echo "   Port: $PORT"
          echo "   Use: adb connect $HOST:$PORT"
          echo ""
          echo "ðŸ“± You can run scrcpy or adb remotely!"
          echo "=========================================="
          while :; do sleep 60; done
          EOF
          chmod +x keep_alive.sh

      - name: Launch Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          arch: x86_64
          profile: Nexus 6
          ram-size: 4096M
          cores: 2
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
          disable-animations: true
          script: |
            adb wait-for-device
            adb root
            sleep 2
            adb tcpip 5555
            sleep 2
            ./ngrok tcp 5555 --log=stdout > /dev/null &
            sleep 10
            bash keep_alive.sh
