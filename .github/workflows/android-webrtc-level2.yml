name: Android 11 AVD - WebRTC via VPS

on:
  workflow_dispatch:
    inputs:
      duration:
        description: 'Session duration in minutes (5-360)'
        required: false
        default: '30'

jobs:
  run-emulator:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Licenses and Install System Image
        run: |
          yes | sdkmanager --licenses || true
          sdkmanager --install "system-images;android-30;google_apis;x86_64"
          sdkmanager --install "platform-tools" "emulator"

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpulse0 libxcb-xinerama0 libxcb-cursor0 \
            libxkbcommon-x11-0 xvfb nodejs npm

      - name: Create Optimized AVD
        run: |
          echo "Creating AVD..."
          echo "no" | avdmanager create avd -n test \
            -k "system-images;android-30;google_apis;x86_64" \
            -d pixel_xl --force
          
          echo "Waiting for AVD creation..."
          sleep 2
          
          echo "Verifying AVD directory..."
          ls -la ~/.android/avd/
          
          if [ ! -d ~/.android/avd/test.avd ]; then
            echo "Error: AVD directory was not created!"
            exit 1
          fi
          
          echo "AVD created successfully. Adding optimizations..."
          cat >> ~/.android/avd/test.avd/config.ini << 'EOFCONFIG'
          hw.ramSize=4096
          hw.heapSize=512
          disk.dataPartition.size=8192M
          hw.gpu.enabled=yes
          hw.gpu.mode=host
          hw.lcd.density=240
          hw.lcd.width=720
          hw.lcd.height=1280
          EOFCONFIG
          
          echo "Configuration applied. Last 10 lines:"
          tail -10 ~/.android/avd/test.avd/config.ini

      - name: Start Emulator
        run: |
          echo "Starting Android emulator..."
          nohup xvfb-run --auto-servernum --server-args='-screen 0 720x1280x24' \
            emulator -avd test \
            -gpu swiftshader_indirect \
            -no-audio \
            -no-boot-anim \
            -no-snapshot \
            -netdelay none \
            -netspeed full \
            -verbose > emulator.log 2>&1 &
          
          echo "Waiting for emulator device..."
          timeout 180 adb wait-for-device || {
            echo "Emulator failed to start!"
            cat emulator.log
            exit 1
          }
          
          echo "Device detected. Waiting for boot completion..."
          for i in {1..60}; do
            STATUS=$(adb shell getprop sys.boot_completed 2>/dev/null)
            CLEAN=$(echo "$STATUS" | tr -d '[:space:]')
            if [ "$CLEAN" = "1" ]; then
              echo "Emulator booted successfully in $((i*2)) seconds"
              break
            fi
            if [ $i -eq 60 ]; then
              echo "Boot timeout!"
              exit 1
            fi
            sleep 2
          done
          
          echo "Applying optimizations..."
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          
          echo "Emulator is ready!"
          adb devices

      - name: Setup WebRTC Client
        run: |
          npm install socket.io-client
          
          cat > webrtc-client.js << 'ENDJS'
          const io = require('socket.io-client');
          const socket = io('http://159.195.6.61:3000');
          const ROOM_ID = 'emulator-room-1';
          
          socket.on('connect', () => {
            console.log('[OK] Connected to signaling server at 159.195.6.61');
            socket.emit('join-room', ROOM_ID);
            socket.emit('emulator-ready', ROOM_ID);
            console.log('[OK] Emulator ready signal sent');
          });
          
          socket.on('disconnect', () => {
            console.log('[X] Disconnected from signaling server');
          });
          
          socket.on('error', (err) => {
            console.error('[ERROR]', err);
          });
          
          setInterval(() => {
            console.log('[HEARTBEAT] Emulator active');
          }, 30000);
          
          console.log('[STARTING] WebRTC client for emulator');
          ENDJS
          
          nohup node webrtc-client.js > webrtc-client.log 2>&1 &
          sleep 3
          
          if pgrep -f "webrtc-client.js" > /dev/null; then
            echo "WebRTC client started successfully"
            cat webrtc-client.log
          else
            echo "Failed to start WebRTC client"
            cat webrtc-client.log
            exit 1
          fi

      - name: Display Access Information
        run: |
          echo ""
          echo "========================================"
          echo "   ANDROID EMULATOR IS READY"
          echo "========================================"
          echo ""
          echo "Access the emulator in your browser:"
          echo "   http://159.195.6.61/"
          echo ""
          echo "Click 'Connect to Emulator' button"
          echo ""
          echo "Session will run for: ${{ github.event.inputs.duration }} minutes"
          echo ""
          echo "========================================"

      - name: Keep Session Alive
        run: |
          DURATION=${{ github.event.inputs.duration }}
          echo "Session will run for ${DURATION} minutes"
          
          for ((i=1; i<=${DURATION}; i++)); do
            echo "[${i}/${DURATION} min] Session active"
            
            if adb shell dumpsys battery | head -3; then
              echo "Emulator is responsive"
            else
              echo "Warning: Emulator might be unresponsive"
            fi
            
            if pgrep -f "webrtc-client.js" > /dev/null; then
              echo "WebRTC client is running"
            else
              echo "Warning: WebRTC client stopped"
            fi
            
            sleep 60
          done
          
          echo "Session duration completed"

      - name: Cleanup
        if: always()
        run: |
          echo "Cleaning up..."
          pkill -9 emulator || true
          pkill -9 qemu-system || true
          pkill -9 node || true
          echo "Cleanup complete"

      - name: Upload Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: emulator-logs-${{ github.run_number }}
          path: |
            emulator.log
            webrtc-client.log
          retention-days: 2
